{
  "classname" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
  "storedCandidateMap" : {
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#getFluxString#()Lreactor/core/publisher/Flux<Ljava/lang/String;>;" : [ {
      "lineNumbers" : [ 73, 74 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"stringInput\"",
          "id" : "385e4918-ebad-47d6-a9e2-2b309e3c829d",
          "assertionType" : "EQUAL",
          "key" : "/"
        } ],
        "expression" : "SELF",
        "expectedValue" : null,
        "id" : "e554fb71-8680-4aee-b73c-b8ea56bc0b08",
        "assertionType" : "ALLOF",
        "key" : null
      },
      "candidateId" : "3b8c6e47-f04c-443b-be17-943a4b8d837a",
      "name" : "getFluxString_knownAssertionFailure",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "\"stringInput\"",
      "returnValueClassname" : "reactor.core.publisher.Flux",
      "metadata" : {
        "recordedBy" : "testerfresher",
        "hostMachineName" : "testerfresher",
        "timestamp" : 15279560038666,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -1439367195,
      "probSerializedValue" : "InN0cmluZ0lucHV0Ig==",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "getFluxString",
        "signature" : "()Lreactor/core/publisher/Flux<Ljava/lang/String;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#combineStreams#()Ljava/util/List<Ljava/lang/String;>;" : [ {
      "lineNumbers" : [ 148, 149, 150, 151, 152, 154, 156 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"First Flux: 2, Second Flux: 0\"",
          "id" : "d95bc092-f246-4c62-b0eb-b710568b5ca6",
          "assertionType" : "EQUAL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"First Flux: 4, Second Flux: 1\"",
          "id" : "aa1a6c4f-328c-4f20-b4c3-f5b19cfeb41d",
          "assertionType" : "EQUAL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"First Flux: 6, Second Flux: 2\"",
          "id" : "70a59cf4-9b95-42ba-9075-7eb0ff993474",
          "assertionType" : "EQUAL",
          "key" : "/2"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"First Flux: 8, Second Flux: 3\"",
          "id" : "bc3410a1-98ab-4280-88cf-19c0776467ef",
          "assertionType" : "EQUAL",
          "key" : "/3"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "4535e305-3354-49a2-bc9b-5ffe64b67c0b",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "5f75d26a-95f7-4f98-bd2d-e20557d78933",
      "name" : "combineStreams_happyPath",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[\"First Flux: 2, Second Flux: 0\",\"First Flux: 4, Second Flux: 1\",\"First Flux: 6, Second Flux: 2\",\"First Flux: 8, Second Flux: 3\"]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 13887230752583,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : 255507766,
      "probSerializedValue" : "WyJGaXJzdCBGbHV4OiAyLCBTZWNvbmQgRmx1eDogMCIsIkZpcnN0IEZsdXg6IDQsIFNlY29uZCBGbHV4OiAxIiwiRmlyc3QgRmx1eDogNiwgU2Vjb25kIEZsdXg6IDIiLCJGaXJzdCBGbHV4OiA4LCBTZWNvbmQgRmx1eDogMyJd",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "combineStreams",
        "signature" : "()Ljava/util/List<Ljava/lang/String;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#fluxListSubscribe#()Ljava/util/List<Ljava/lang/Integer;>;" : [ {
      "lineNumbers" : [ 22, 23, 24, 53 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "50",
          "id" : "c523fc86-69bf-4b3f-bcb6-32dfd54ba02e",
          "assertionType" : "EQUAL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "100",
          "id" : "8b4411af-007d-4646-ab3d-896b891ba30f",
          "assertionType" : "EQUAL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "150",
          "id" : "4891623d-70ea-413c-8780-9c12d0531dbf",
          "assertionType" : "EQUAL",
          "key" : "/2"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "200",
          "id" : "dd536c28-9f0b-48f8-bdbe-15f3b09da1eb",
          "assertionType" : "EQUAL",
          "key" : "/3"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "720a5cd4-6776-4114-81b3-fc0f88e9bfa6",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "4675c096-1423-4451-a83b-1d1e9dfe051e",
      "name" : "fluxListSubscribe_happyPath",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[50,100,150,200]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 14285482084125,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -2133239595,
      "probSerializedValue" : "WzUwLDEwMCwxNTAsMjAwXQ==",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "fluxListSubscribe",
        "signature" : "()Ljava/util/List<Ljava/lang/Integer;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#fluxThrottling#()I" : [ {
      "lineNumbers" : [ 83, 84, 91, 92, 93, 94, 95 ],
      "testAssertions" : {
        "subAssertions" : [ ],
        "expression" : "SELF",
        "expectedValue" : null,
        "id" : "c5e9cd9f-e552-44ba-b3ab-2f177a98e6c1",
        "assertionType" : "ALLOF",
        "key" : null
      },
      "candidateId" : "b85c1258-ffa9-4cdd-91b8-9e0e75933fbf",
      "name" : "fluxThrottling_happyPath",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "0",
      "returnValueClassname" : "I",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 14210983710333,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : 1274792007,
      "probSerializedValue" : "",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "fluxThrottling",
        "signature" : "()I",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#concurrent#()Ljava/util/List<Ljava/lang/Integer;>;" : [ {
      "lineNumbers" : [ 100, 101, 102, 103, 104, 105, 107, 108 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "2",
          "id" : "831a7414-aaf7-42d8-848b-8aa737fe42f5",
          "assertionType" : "EQUAL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "4",
          "id" : "bdb2d8ac-0c00-4c93-9c37-b05c11d2b8a4",
          "assertionType" : "EQUAL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "6",
          "id" : "ba8fbfb4-26bf-4d61-83b7-4ce4cf1eae66",
          "assertionType" : "EQUAL",
          "key" : "/2"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "8",
          "id" : "0220bb7c-d688-4920-ac12-382ec6afc93f",
          "assertionType" : "EQUAL",
          "key" : "/3"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "4d210849-a333-42a0-a577-17482fadceee",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "a4256c78-7ed1-4ff1-8b82-b182b61240e4",
      "name" : "concurrent_happyPath",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[2,4,6,8]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 14201315251458,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : 1559491002,
      "probSerializedValue" : "WzIsNCw2LDhd",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "concurrent",
        "signature" : "()Ljava/util/List<Ljava/lang/Integer;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#backPressure1#()Ljava/util/List<Ljava/lang/Integer;>;" : [ {
      "lineNumbers" : [ 113, 114, 115, 116, 143 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "1",
          "id" : "0ab39294-6d6b-4fb1-9ae7-1fe7e9422429",
          "assertionType" : "EQUAL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "2",
          "id" : "42304258-f3e2-4acf-bf80-24fc8096df80",
          "assertionType" : "EQUAL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "3",
          "id" : "140c669b-9f6d-4cc8-999a-d40c13483df3",
          "assertionType" : "EQUAL",
          "key" : "/2"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "4",
          "id" : "7177eb30-62ac-4481-bc40-d3062001fe7d",
          "assertionType" : "EQUAL",
          "key" : "/3"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "02eb255a-557d-443f-9d09-20f9c7e3146d",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "73272d68-7079-4f09-a94a-ddb99b6a4e43",
      "name" : "backPressure1_happyPath",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[1,2,3,4]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 14189900120333,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -1366923696,
      "probSerializedValue" : "WzEsMiwzLDRd",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "backPressure1",
        "signature" : "()Ljava/util/List<Ljava/lang/Integer;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 0
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#parallelFluxExample#()Ljava/util/List<Ljava/lang/Integer;>;" : [ {
      "lineNumbers" : [ 164, 165, 166, 167, 168, 170, 173, 174 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "12",
          "id" : "6c8af913-aabc-4d6d-ba26-1a700741f907",
          "assertionType" : "NOT_NULL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "6",
          "id" : "07d68e45-5e59-46b8-8c0d-5ff49de5bde5",
          "assertionType" : "NOT_NULL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "2",
          "id" : "b8a65c2c-9a5c-4ac0-b49e-6d2bc4635668",
          "assertionType" : "NOT_NULL",
          "key" : "/2"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "14",
          "id" : "f0b36456-fa59-49fd-9123-63be5d45a6ef",
          "assertionType" : "NOT_NULL",
          "key" : "/3"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "4",
          "id" : "f7f0a4e4-5f36-4f3e-ba53-2bbc1ae4fb15",
          "assertionType" : "NOT_NULL",
          "key" : "/4"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "16",
          "id" : "cc006624-ca11-48ec-a4a5-6b94ab80c0c2",
          "assertionType" : "NOT_NULL",
          "key" : "/5"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "567aba79-3ee2-4339-a15c-c2c5b353964f",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "7061f1c7-c5ec-445f-bc19-c36acb9908be",
      "name" : "parallelFluxExample saved on 2024-06-20 10:49",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[12,6,2,14,4,16]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 455336057410958,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -1809735790,
      "probSerializedValue" : "WzEyLDYsMiwxNCw0LDE2XQ==",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "parallelFluxExample",
        "signature" : "()Ljava/util/List<Ljava/lang/Integer;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 461240157
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#disposableExample#()Ljava/util/List<Ljava/lang/Integer;>;" : [ {
      "lineNumbers" : [ 179, 180, 181, 182, 185, 186, 189, 190 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "1",
          "id" : "7c3f30c3-ebaa-40d7-8b10-800b4718efc2",
          "assertionType" : "EQUAL",
          "key" : "/0"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "2",
          "id" : "cab2694f-23ef-4d56-acf5-ebd46e5dac89",
          "assertionType" : "EQUAL",
          "key" : "/1"
        }, {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "3",
          "id" : "d6e9dfb8-25d8-4589-8ff9-3b52db2fcb2d",
          "assertionType" : "EQUAL",
          "key" : "/2"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "93f6a2d4-cfda-4fb0-b4ca-09689da85113",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "624593b3-b19f-4843-9138-cb1e8a732456",
      "name" : "disposableExample saved on 2024-06-20 10:49",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[1,2,3]",
      "returnValueClassname" : "java.util.List",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 455324688825083,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : 1327921924,
      "probSerializedValue" : "WzEsMiwzXQ==",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "disposableExample",
        "signature" : "()Ljava/util/List<Ljava/lang/Integer;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : 1236041966
      }
    } ],
    "org.unlogged.springwebfluxdemo.controller.FluxOpsController#tuple4Example#()Lreactor/core/publisher/Flux<Lreactor/util/function/Tuple4;><Ljava/lang/Integer;,Ljava/lang/String;,Ljava/lang/Double;,Ljava/lang/Boolean;>;" : [ {
      "lineNumbers" : [ 195, 196, 197, 198, 200, 202 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "1",
            "id" : "0c694391-7c90-4f1c-bc40-03e68f08db8a",
            "assertionType" : "EQUAL",
            "key" : "/0/0"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "\"A\"",
            "id" : "b23e8c70-6c37-4a06-bef3-1a0cea038550",
            "assertionType" : "EQUAL",
            "key" : "/0/1"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "1.1",
            "id" : "7a327531-7e5f-4319-87d6-8b8da2badd22",
            "assertionType" : "EQUAL",
            "key" : "/0/2"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "true",
            "id" : "7727c371-3d21-439f-919c-585171ad3e94",
            "assertionType" : "EQUAL",
            "key" : "/0/3"
          } ],
          "expression" : "SELF",
          "expectedValue" : "true",
          "id" : "948ef3b1-ac1e-4f26-b1da-6bba60a9e763",
          "assertionType" : "ALLOF",
          "key" : "/0"
        }, {
          "subAssertions" : [ {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "2",
            "id" : "449ac2a0-4fb0-4a6a-ad6d-01c7a05c85f4",
            "assertionType" : "EQUAL",
            "key" : "/1/0"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "\"B\"",
            "id" : "5fd0a832-8937-41c4-9a3d-88e491d10caf",
            "assertionType" : "EQUAL",
            "key" : "/1/1"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "2.2",
            "id" : "ab094411-2611-4972-a559-6662e2fb799b",
            "assertionType" : "EQUAL",
            "key" : "/1/2"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "false",
            "id" : "220e8976-2a5c-4422-b7d8-82dd0bd8270b",
            "assertionType" : "EQUAL",
            "key" : "/1/3"
          } ],
          "expression" : "SELF",
          "expectedValue" : "true",
          "id" : "f6a32a1f-2682-4a56-acab-6cd581063a3d",
          "assertionType" : "ALLOF",
          "key" : "/1"
        }, {
          "subAssertions" : [ {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "3",
            "id" : "e8257ab8-158c-41aa-9ddb-bfed56fb7cd1",
            "assertionType" : "EQUAL",
            "key" : "/2/0"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "\"C\"",
            "id" : "598d63d5-e250-4555-a349-e49addf1f989",
            "assertionType" : "EQUAL",
            "key" : "/2/1"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "3.3",
            "id" : "cc0a958f-f993-4cfa-80d6-8282a9eb09f1",
            "assertionType" : "EQUAL",
            "key" : "/2/2"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "true",
            "id" : "0eb0bc9d-983d-4f6f-a43a-47295da2dd64",
            "assertionType" : "EQUAL",
            "key" : "/2/3"
          } ],
          "expression" : "SELF",
          "expectedValue" : "true",
          "id" : "45e8910d-f452-45cc-9327-0e0a730e5603",
          "assertionType" : "ALLOF",
          "key" : "/2"
        }, {
          "subAssertions" : [ {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "4",
            "id" : "256e0fe8-ad95-42e5-9e9d-2e6fbdaecb53",
            "assertionType" : "EQUAL",
            "key" : "/3/0"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "\"D\"",
            "id" : "5cc84c8c-1ddb-4e35-bad2-73584374696e",
            "assertionType" : "EQUAL",
            "key" : "/3/1"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "4.4",
            "id" : "e9fa05ad-6970-4034-9130-7c90470cc321",
            "assertionType" : "EQUAL",
            "key" : "/3/2"
          }, {
            "subAssertions" : [ ],
            "expression" : "SELF",
            "expectedValue" : "false",
            "id" : "e8b21e81-9f3c-4b48-a8e4-cae99c79c86f",
            "assertionType" : "EQUAL",
            "key" : "/3/3"
          } ],
          "expression" : "SELF",
          "expectedValue" : "true",
          "id" : "94a7796c-b508-423b-ae7f-8883d02ab460",
          "assertionType" : "ALLOF",
          "key" : "/3"
        } ],
        "expression" : "SELF",
        "expectedValue" : "true",
        "id" : "72691c7e-8c44-494d-ac92-cf40b655e029",
        "assertionType" : "ALLOF",
        "key" : "/"
      },
      "candidateId" : "dc35346e-16c5-43e6-beda-071bafce8773",
      "name" : "tuple4Example saved on 2024-06-20 10:49",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "[[1,\"A\",1.1,true],[2,\"B\",2.2,false],[3,\"C\",3.3,true],[4,\"D\",4.4,false]]",
      "returnValueClassname" : "reactor.core.publisher.Flux",
      "metadata" : {
        "recordedBy" : "akshatjain",
        "hostMachineName" : "akshatjain",
        "timestamp" : 455316082823958,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -1407848630,
      "probSerializedValue" : "W1sxLCJBIiwxLjEsdHJ1ZV0sWzIsIkIiLDIuMixmYWxzZV0sWzMsIkMiLDMuMyx0cnVlXSxbNCwiRCIsNC40LGZhbHNlXV0=",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "tuple4Example",
        "signature" : "()Lreactor/core/publisher/Flux<Lreactor/util/function/Tuple4;><Ljava/lang/Integer;,Ljava/lang/String;,Ljava/lang/Double;,Ljava/lang/Boolean;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.FluxOpsController",
        "methodHash" : -1328895433
      }
    } ]
  },
  "declaredMockMap" : { }
}