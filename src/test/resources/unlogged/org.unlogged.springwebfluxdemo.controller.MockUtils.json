{
  "classname" : "org.unlogged.springwebfluxdemo.controller.MockUtils",
  "storedCandidateMap" : {
    "org.unlogged.springwebfluxdemo.controller.MockUtils#returnMockString#()Lreactor/core/publisher/Mono<Ljava/lang/String;>;" : [ {
      "lineNumbers" : [ 7 ],
      "testAssertions" : {
        "subAssertions" : [ {
          "subAssertions" : [ ],
          "expression" : "SELF",
          "expectedValue" : "\"Test String\"",
          "id" : "6a438193-c442-4cc7-8914-aca40637ebd1",
          "assertionType" : "EQUAL",
          "key" : "/"
        } ],
        "expression" : "SELF",
        "expectedValue" : null,
        "id" : "33e8b7d8-5cca-40ea-9e19-5cd3d82ff89a",
        "assertionType" : "ALLOF",
        "key" : null
      },
      "candidateId" : "a68d87c7-003c-41ba-b582-b00eb3ab5a0a",
      "name" : "returnMockString saved on 2024-03-26 15:40",
      "description" : null,
      "methodArguments" : [ ],
      "returnValue" : "\"Test String\"",
      "returnValueClassname" : "reactor.core.publisher.Mono",
      "metadata" : {
        "recordedBy" : "testerfresher",
        "hostMachineName" : "testerfresher",
        "timestamp" : 14677083251876,
        "candidateStatus" : "NA"
      },
      "sessionIdentifier" : -1159796669,
      "probSerializedValue" : "IlRlc3QgU3RyaW5nIg==",
      "mockIds" : [ ],
      "exception" : false,
      "method" : {
        "name" : "returnMockString",
        "signature" : "()Lreactor/core/publisher/Mono<Ljava/lang/String;>;",
        "className" : "org.unlogged.springwebfluxdemo.controller.MockUtils",
        "methodHash" : -838334345
      }
    } ]
  },
  "declaredMockMap" : {
    "org.unlogged.springwebfluxdemo.controller.MockUtils#returnMockString#()Lreactor/core/publisher/Mono<Ljava/lang/String;>;" : [ {
      "id" : "f62339a1-6cb7-4148-b90f-3c2eec4f96aa",
      "name" : "mock response for call to mockUtils.returnMockString()",
      "fieldTypeName" : "org.unlogged.springwebfluxdemo.controller.MockUtils",
      "sourceClassName" : "org.unlogged.springwebfluxdemo.controller.MonoOpsController",
      "fieldName" : "mockUtils",
      "methodName" : "returnMockString",
      "whenParameter" : [ ],
      "thenParameter" : [ {
        "returnParameter" : {
          "declaredMocks" : [ ],
          "value" : "\"Test String\"",
          "returnValueType" : "REAL",
          "className" : "reactor.core.publisher.Mono<java.lang.String>"
        },
        "methodExitType" : "NORMAL"
      } ],
      "methodHashKey" : "org.unlogged.springwebfluxdemo.controller.MockUtils#returnMockString#()Lreactor/core/publisher/Mono<Ljava/lang/String;>;"
    } ]
  }
}