{
  "classname" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository",
  "storedCandidateMap" : { },
  "declaredMockMap" : {
    "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#save#(Lorg/unlogged/springwebfluxdemo/model/Person;)Lreactor/core/publisher/Mono<S>;" : [ {
      "id" : "e93dee41-1b13-48c3-b107-cad282419dd4",
      "name" : "mock response for call to mongoRepository.save(new Person(\"personY\", 63))",
      "fieldTypeName" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository",
      "sourceClassName" : "org.unlogged.springwebfluxdemo.controller.MongoReactiveOpsController",
      "fieldName" : "mongoRepository",
      "methodName" : "save",
      "whenParameter" : [ {
        "name" : null,
        "type" : "EQUAL",
        "value" : "{\"id\":null,\"name\":\"personY\",\"age\":63}"
      } ],
      "thenParameter" : [ {
        "returnParameter" : {
          "declaredMocks" : [ ],
          "value" : "{\"id\":\"66029f0ba2c25d2c50130b82\",\"name\":\"personY\",\"age\":63}",
          "returnValueType" : "REAL",
          "className" : "reactor.core.publisher.Mono<S>"
        },
        "methodExitType" : "NORMAL"
      } ],
      "methodHashKey" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#save#(Lorg/unlogged/springwebfluxdemo/model/Person;)Lreactor/core/publisher/Mono<S>;"
    } ],
    "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findAll#()Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;" : [ {
      "id" : "6ada0bfa-bd07-44b4-b5cc-11d1d007fc8c",
      "name" : "mock response for call to mongoRepository.findAll()",
      "fieldTypeName" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository",
      "sourceClassName" : "org.unlogged.springwebfluxdemo.controller.MongoReactiveOpsController",
      "fieldName" : "mongoRepository",
      "methodName" : "findAll",
      "whenParameter" : [ ],
      "thenParameter" : [ {
        "returnParameter" : {
          "declaredMocks" : [ ],
          "value" : "1455993906",
          "returnValueType" : "REAL",
          "className" : "reactor.core.publisher.Flux<org.unlogged.springwebfluxdemo.model.Person>"
        },
        "methodExitType" : "NORMAL"
      } ],
      "methodHashKey" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findAll#()Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;"
    } ],
    "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findPeopleWithAgeGreaterThan#(Ljava/lang/Integer;)Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;" : [ {
      "id" : "fb869332-a569-41f7-a6a0-791e2b446da8",
      "name" : "mock response for call to mongoRepository.findPeopleWithAgeGreaterThan(30)",
      "fieldTypeName" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository",
      "sourceClassName" : "org.unlogged.springwebfluxdemo.service.flow1.CustomService",
      "fieldName" : "mongoRepository",
      "methodName" : "findPeopleWithAgeGreaterThan",
      "whenParameter" : [ {
        "name" : null,
        "type" : "EQUAL",
        "value" : "30"
      } ],
      "thenParameter" : [ {
        "returnParameter" : {
          "declaredMocks" : [ ],
          "value" : "[{\"id\":\"65dc47c1d81d7e5d0d6946c1\",\"name\":\"bababooey\",\"age\":420},{\"id\":\"65dc6e65a51e4e2079024dcf\",\"name\":\"personX\",\"age\":64},{\"id\":\"65e1de11bb4de67e4d8565a3\",\"name\":\"personY\",\"age\":63},{\"id\":\"66029f0ba2c25d2c50130b84\",\"name\":\"personY\",\"age\":63},{\"id\":\"66029f0ba2c25d2c50130b83\",\"name\":\"personY\",\"age\":63},{\"id\":\"66029f0ba2c25d2c50130b82\",\"name\":\"personY\",\"age\":63},{\"id\":\"660a50fbce49d51bb684c227\",\"name\":\"personY\",\"age\":63}]",
          "returnValueType" : "REAL",
          "className" : "reactor.core.publisher.Flux<org.unlogged.springwebfluxdemo.model.Person>"
        },
        "methodExitType" : "NORMAL"
      } ],
      "methodHashKey" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findPeopleWithAgeGreaterThan#(Ljava/lang/Integer;)Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;"
    } ],
    "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findPeopleWithAgeLessThan#(Ljava/lang/Integer;)Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;" : [ {
      "id" : "a781547b-fb46-447e-8f43-061c6e47ed31",
      "name" : "mock response for call to mongoRepository.findPeopleWithAgeLessThan(30)",
      "fieldTypeName" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository",
      "sourceClassName" : "org.unlogged.springwebfluxdemo.service.flow1.CustomService",
      "fieldName" : "mongoRepository",
      "methodName" : "findPeopleWithAgeLessThan",
      "whenParameter" : [ {
        "name" : null,
        "type" : "EQUAL",
        "value" : "30"
      } ],
      "thenParameter" : [ {
        "returnParameter" : {
          "declaredMocks" : [ ],
          "value" : "[{\"id\":\"65dc19bca9251b174f3f7a24\",\"name\":\"amg\",\"age\":26},{\"id\":\"65dc46237cad7f231af36f0c\",\"name\":\"amg\",\"age\":26},{\"id\":\"65dc476d6ab2e823a98f1446\",\"name\":\"amg\",\"age\":26}]",
          "returnValueType" : "REAL",
          "className" : "reactor.core.publisher.Flux<org.unlogged.springwebfluxdemo.model.Person>"
        },
        "methodExitType" : "NORMAL"
      } ],
      "methodHashKey" : "org.unlogged.springwebfluxdemo.repository.PersonReactiveMongoRepository#findPeopleWithAgeLessThan#(Ljava/lang/Integer;)Lreactor/core/publisher/Flux<Lorg/unlogged/springwebfluxdemo/model/Person;>;"
    } ]
  }
}