version: '3'

services:
  mysqldb:
    image: mysql:latest
    restart: always
    networks:
      - unlogged_network
    environment:
      MYSQL_DATABASE: udemo2
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount SQL initialization script
    command: ['--init-file', '/docker-entrypoint-initdb.d/init.sql']  # Execute script

  redis-r:
    image: redis:latest
    restart: always
    networks:
      - unlogged_network
    environment:
      REDIS_MASTER_HOST: localhost

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - unlogged_network

  webflux-app:
    container_name: target-repo
    build:
      context: ../
    volumes:
      - ~/.unlogged/:/root/.unlogged/
      - ~/.m2/repository/video/bug/unlogged-sdk:/root/.m2/repository/video/bug/unlogged-sdk
    ports:
      - "8080:8080"
      - "12100:12100"
    depends_on:
      - mysqldb
      - redis-r
      - mongodb
    networks:
      - unlogged_network
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb:27017
      SPRING_R2DBC_URL: r2dbc:mysql://mysqldb:3306/unlogged
      SPRING_R2DBC_USERNAME: root
      SPRING_R2DBC_PASSWORD: root_password
      resilient_restaurant_service: "http://webflux-app: 8080/resilient/restaurant/"
      resilient_review_service: "http://webflux-app: 8080/resilient/review/"
      integration_bluedart_service: "http://webflux-app: 8080/integration/bluedart/"
      integration_dhl_service: "http://webflux-app: 8080/integration/dhl/"
      integration_splitter_concert_service: "http://webflux-app: 8080/integration/splitter/concert/reserve"
      integration_splitter_theatre_service: "http://webflux-app: 8080/integration/splitter/theatre/reserve"
      sec03_product_service: "http://webflux-app: 8080/integration/orchestration/parallel/product/"
      sec03_user_service: "http://webflux-app: 8080/integration/orchestration/parallel/user/"
      sec03_inventory_service: "http://webflux-app: 8080/integration/orchestration/parallel/inventory/"
      sec03_shipping_service: "http://webflux-app: 8080/integration/orchestration/parallel/shipping/"
      sec04_product_service: "http://webflux-app: 8080/integration/orchestration/parallel/product/"
      sec04_user_service: "http://webflux-app: 8080/integration/orchestration/parallel/user/"
      sec04_inventory_service: "http://webflux-app: 8080/integration/orchestration/parallel/inventory/"
      sec04_shipping_service: "http://webflux-app: 8080/integration/orchestration/parallel/shipping/"

networks:
  unlogged_network:
    driver: bridge

volumes:
  mongodb_data_container:
